{"version":3,"sources":["components/Nav.js","components/SearchArea.js","components/Movie.js","components/MovieList.js","components/Pagination.js","components/MovieInfo.js","components/App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","SearchArea","props","action","onSubmit","handleSubmit","placeholder","onChange","handleChange","type","Movie","image","src","alt","style","width","height","onClick","viewMovieInfo","movieId","MovieList","movies","map","movie","i","key","id","poster_path","Pagination","pageLinks","active","currentPage","push","nextPage","pages","MovieInfo","closeMovieInfo","cursor","paddingTop","marginLeft","currentMovie","title","release_date","substring","split","concat","join","overview","App","e","preventDefault","fetch","apiKey","state","searchTerm","then","data","json","console","log","setState","results","totalResults","total_results","target","value","pageNumber","filteredMovie","filter","newCurrentMovie","length","process","numberPages","Math","floor","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8b8ddd8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = () => {\n    return  (\n        <nav className='grey darken-3'>\n            <div className='nav-wrapper container '>\n                <a href=\"#\" className='brand-logo'>Movie finder</a>\n            </div>\n        </nav>\n    )\n}\nexport default Nav;","import React from 'react';\n\nconst SearchArea = (props) => {\n    return (\n        <div className='container'>\n            <div className='row'>\n                <section className='col s4 offset-s4'>\n                    <form action='' onSubmit={props.handleSubmit}>\n                        <div className='input-field'>\n                            <input placeholder='Search movie' onChange={props.handleChange} type='text' />\n                        </div>\n                    </form>\n                </section>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchArea;","import React from 'react';\n\nconst Movie = (props) => {\n return (\n     <div className='col s12 m6 l3'>\n         <div className='card'>\n             <div className='card-image waves-effect waves-effect waves-block waves-light'>\n                   {\n                       props.image==null ? <img src={`http://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg`} alt='card' style={{width : '100%' , height:360}} /> : <img src={`http://image.tmdb.org/t/p/w185${props.image}`} alt=\"card\" style={{width:'100%',height:360}} />\n                   }\n             </div>\n             <div className='card-content'>\n                 <p><a href='#' onClick={() => props.viewMovieInfo(props.movieId)}>View Details</a></p>\n             </div>\n         </div>\n     </div>\n )\n} \n\nexport default Movie;","import React from 'react';\nimport Movie from './Movie';\n\nconst MovieList = (props) => {\n return (\n     <div className='container'>\n         <div className='row'>\n             <div className='col s12'>\n                {\n                    props.movies.map((movie,i) => {\n                        return  (\n                            <Movie key={i} viewMovieInfo={props.viewMovieInfo} movieId={movie.id} image={movie.poster_path} />\n                        )\n                    })\n                }  \n             </div>\n         </div>\n     </div>\n )\n    \n} \n\nexport default MovieList;","import React from 'react';\n\nconst Pagination = (props) => {\n    const pageLinks = [];\n\n    for (let i=1;i<=props.pages +1; i++) {\n        let active = props.currentPage == i ? 'active' : '';\n\n    pageLinks.push(<li className={`waves-effect ${active}`} key = {i} onClick={() => props.nextPage(i)}><a href='#'>{i}</a></li>)\n    }\n    \n\nreturn (\n    <div className='container'>\n        <div className='row'>\n           <ul className='pagination'>\n                {pageLinks}\n           </ul>\n        </div>\n    </div>\n)\n}\nexport default Pagination;","import React from 'react';\n\nconst MovieInfo = (props) => {\n    return (\n\n        <div className='container'>\n        <div className='row' onClick={props.closeMovieInfo} style={{cursor : 'pointer', paddingTop:50}}>\n            <i className='fas fa-arrow-left'></i>\n            <span style={{marginLeft: 10}}>GO BACK</span>\n        </div>\n        <div className='row'>\n            <div className='col 12m m4'>\n            {props.currentMovie.poster_path == null ? <img src={`http://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg`} alt='iamge' style={{width:'100%', height:360}} /> : <img src={`http://image.tmdb.org/t/p/w185${props.currentMovie.poster_path}`} alt=\"card\" style={{width:'100%',height:360}} />}  \n            </div>\n            <div className='col s12 m8'>\n            <div className='info-container'>\n    <p>{props.currentMovie.title}</p>\n    <p>{props.currentMovie.release_date.substring(5).split(\"-\").concat(props.currentMovie.release_date.substring(0,4)).join(\"/\")}</p>\n    <p>{props.currentMovie.overview}</p>\n            </div>\n            </div>\n        \n        </div>\n        </div>\n    )\n} \nexport default MovieInfo;","import React, { Component } from 'react'\nimport Nav from './Nav';\nimport SearchArea from './SearchArea';\nimport MovieList from './MovieList';\nimport Pagination from './Pagination';\nimport MovieInfo from './MovieInfo';\n\nclass  App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      movies : [],\n      searchTerm : '',\n      totalResults : 0,\n      currentPage : 1 ,\n      currentMovie: null\n    }\n    this.apiKey = process.env.REACT_APP_API\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}`)\n    .then(data => data.json())\n    .then(data => {\n      console.log(data);\n      this.setState({movies : [...data.results], totalResults:data.total_results}) \n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({searchTerm : e.target.value})\n  }\n\n  nextPage = (pageNumber) => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.searchTerm}&page=${pageNumber}`)\n    .then(data => data.json())\n    .then(data => {\n      console.log(data);\n      this.setState({movies : [...data.results], currentPage : pageNumber}) \n    })\n  }\n  viewMovieInfo = (id) => {\n    const filteredMovie = this.state.movies.filter(movie => movie.id == id)\n\n    const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null\n    this.setState({currentMovie: newCurrentMovie})\n  }  \ncloseMovieInfo = () => {\n  this.setState({currentMovie: null})\n}\n\n  render () {\n    const numberPages = Math.floor(this.state.totalResults / 20);\n  return (\n    \n    <div className=\"App\">\n    <Nav />\n    {this.state.currentMovie == null ? <div>\n    <SearchArea handleSubmit={this.handleSubmit} handleChange={this.handleChange} />    <MovieList viewMovieInfo={this.viewMovieInfo} movies={this.state.movies} />\n    </div> : <MovieInfo currentMovie={this.state.currentMovie} closeMovieInfo={this.closeMovieInfo} /> }\n    \n    {this.state.totalResults > 20 && this.state.currentMovie == null ? <Pagination pages={numberPages} nextPage={this.nextPage} currentPage={this.state.currentPage} /> : '' }\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}